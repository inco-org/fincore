# Copyright (C) Inco - All Rights Reserved.
#
# Written by Rafael Viotti <viotti@inco.vc>, September 2024.
#
# Unauthorized copying of this file, via any medium, is strictly prohibited. Proprietary and confidential.
#
# References on Github Actions
# ============================
#
#  • http://yonatankra.com/7-github-actions-tricks-i-wish-i-knew-before-i-started
#  • http://blog.zenml.io/github-actions-in-action
#  • http://stackoverflow.com/a/68158432
#
# References for test code coverage
# =================================
#
#  • http://coverage.readthedocs.io/en/latest/
#  • http://hynek.me/articles/ditch-codecov-python/
#  • http://github.com/marketplace/actions/python-coverage-comment
#
# Marker: [FAIL_ON_LOW_COVERAGE]
# ==============================
#
# Use the "--fail-under T" parameter on the "python -m coverage report" command below to make the "Report code
# coverage" step fail if the coverage falls below threshold T, where T is a percentage integer value.
#
name: Continuous Integration

on:
  push:
    branches: [ master ]
    paths: [ 'fincore.py' ]

  pull_request:
    paths: [ 'fincore.py' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8-pyproject flake8-quotes ruff pyright
        env: { PIP_ROOT_USER_ACTION: ignore }

      - name: Lint with Flake8
        run: python -m flake8 fincore.py

      - name: Lint with Pyright
        run: python -m pyright --verbose fincore.py

      - name: Lint with Ruff
        run: python -m ruff check fincore.py

      - name: Lint tests with Flake8
        run: python -m flake8 tests/test_fincore.py

      - name: Lint tests with Pyright
        run: python -m pyright --verbose tests/test_fincore.py

      - name: Lint tests with Ruff
        run: python -m ruff check tests/test_fincore.py

  type-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install mypy typeguard
          python -m pip install types-python-dateutil types-requests # "mypy --install-types --non-interactive fincore.py".
        env: { PIP_ROOT_USER_ACTION: ignore }

      - name: Run Mypy
        run: mypy --ignore-missing-imports --strict --follow-imports=silent fincore.py

  # [WERROR]
  #
  # This job runs with "-Werror" to convert warnings to errors. This forces the developer to either fix the warning
  # right away, or explicitly ignore it.
  #
  # http://til.simonwillison.net/pytest/treat-warnings-as-errors
  #
  run-tests:
    runs-on: ubuntu-latest

    permissions:
      # Gives the action the necessary permissions for publishing new comments in pull requests.
      pull-requests: write

      # Gives the action the necessary permissions for pushing data to the Git branch, and for editing existing comments (to avoid publishing multiple comments in the same PR).
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Generate Coverage Configuration
        run: |
          echo '[run]' > .coveragerc
          echo 'relative_files = true' >> .coveragerc
          echo 'omit =' >> .coveragerc
          echo '       tests/*' >> .coveragerc

      - name: Install Test Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r tests/requirements.txt
        env: { PIP_ROOT_USER_ACTION: ignore }

      # See https://docs.pytest.org/en/latest/how-to/doctest.html.
      - name: Run Tests
        run: |
          python -m coverage run -m pytest -Werror --doctest-modules --doctest-continue-on-failure

      - name: Create Coverage Comment Artifact
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Coverage Comment Artifact
        uses: actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt

      # See [FAIL_ON_LOW_COVERAGE] above.
      - name: Report Code Coverage
        run: |
          python -m coverage report
