# Copyright (C) Inco - All Rights Reserved.
#
# Written by Rafael Viotti <viotti@inco.vc>, September 2024.
#
# Unauthorized copying of this file, via any medium, is strictly prohibited. Proprietary and confidential.
#
[tool.ruff]
    exclude = [
        ".bzr",
        ".direnv",
        ".eggs",
        ".git",
        ".git-rewrite",
        ".hg",
        ".ipynb_checkpoints",
        ".mypy_cache",
        ".nox",
        ".pants.d",
        ".pyenv",
        ".pytest_cache",
        ".pytype",
        ".ruff_cache",
        ".svn",
        ".tox",
        ".venv",
        ".vscode",
        "__pypackages__",
        "__pycache__",
        "_build",
        "buck-out",
        "build",
        "dist",
        "distdev",
        "node_modules",
        "site-packages",
        "venv",
    ]
    indent-width = 4

[tool.ruff.lint]
    select = ["E", "F", "Q", "W"]
    ignore = ["E302", "E305", "E402", "E501", "E731"]
    fixable = ["ALL"]
    unfixable = []
    dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"  # Allow unused variables when underscore-prefixed.

[tool.ruff.lint.mccabe]
    max-complexity = 50

[tool.ruff.lint.flake8-quotes]
    inline-quotes = "single"
    multiline-quotes = "single"
    docstring-quotes = "single"

[tool.ruff.format]
    quote-style = "single"            # Unlike Black, use single quotes for strings.
    indent-style = "space"            # Like Black, indent with spaces, rather than tabs.
    skip-magic-trailing-comma = false # Like Black, respect magic trailing commas.
    line-ending = "auto"              # Like Black, automatically detect the appropriate line ending.
    docstring-code-format = false     # Disable auto-formatting of code examples in docstrings.

[tool.pyright]
    typeCheckingMode = "basic"
    reportMissingImports = false
    reportMissingModuleSource = false

[tool.flake8]
    statistics = true
    show-source = true
    doctests = true
    verbose = true
    ignore = ["E302", "E305", "E731", "E501", "E402", "Q001", "Q002"]
    exclude = [".git", "__pycache__", "env"]
